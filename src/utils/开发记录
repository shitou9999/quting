this._onChangeText = this._onChangeText.bind(this);

   _onChangeText(inputData){
        console.log("输入的内容",inputData);
        //把获取到的内容，设置给showValue
        this.setState({showValue:inputData});
    }

   onChangeText={this._onChangeText}//输入框改变触发的函数
*****************View****************
    onMagicTap：当accessible为true时，双击View会调用此函数。
    onMoveShouldSetResponder：触摸控件并滑动时调用的方法
    onMoveShouldSetResponderCapture：触摸控件并滑动时调用的方法,避免子视图响应
    onResponderMove：用户在View上移动手指调用
    onResponderRelease：结束触摸时调用
    pointerEvents：控制当前视图是否可以触控'box-none', 'none', 'box-only', 'auto'

width：宽度
height：高度
backgroundColor：背景颜色
backfaceVisibility：是否显示翻转'visible'，'hidden'
borderColor：边框颜色
borderWidth：边框宽度
borderRadius：边框圆角半径
borderStyle：边框样式'solid'实线，'dotted'点， 'dashed'虚线
borderTopColor：上边框颜色
borderTopWidth：上边框宽度
borderTopLeftRadius：左上角边框圆角的半径
borderTopRightRadius：右上角边框圆角的半径
overflow：内容超过容器时超出显示还是隐藏'visible'， 'hidden'
opacity：透明度
***********************Image*************************************
https://blog.csdn.net/yeshaojian/article/details/52965704
FlexBox：支持弹性盒子风格
Transforms：支持属性动画
backgroundcolor：背景颜色
borderColor：边框颜色
borderWidth：边框宽度
borderRadius：边框圆角
overflow：设置图片尺寸超过容器可以设置显示或隐藏(‘visible’, ‘hidden’)
tintColor：颜色设置
opacity：设置透明度（取值范围0.0（全透明）~ 1.0（不透明））
***********************Image*************************************



<Image style={styles.img}
              source={{uri: this.state.imgs[this.state.count]}}
              resizeMode="contain" />

  cover 模式（默认值）----有丢弃
  要求图片能够填充整个 Image 组件定义的显示区域，可以对图片进行放大或者缩小，可以丢弃放大或缩小后的图片中的部分区域，只求在显示比例不失真的情况下填充整个显示区域。

  contain 模式 -----等比放大或缩小，有可能显示区域空白
  该模式要求显示整张图片，可以对它进行等比放大或者缩小，但不能丢弃改变后图片的某部分。这个模式下图片得到完整的呈现，比例不会变。但图片可能无法填充 Image 的所有区域，会在侧边或者上下留下空白，由 Image 组件的底色填充
  resizeMode="contain"，这样图片就会在指定大小内自适应缩放

   stretch 模式----->任意缩放，会失真
   该模式要求图片填充整个 Image 定义的显示区域，因此会对图片进行任意的缩放，不考虑保持图片原来的宽、高比。这种模式显示出来的图片有可能会出现明显的失真。

    center 模式------》
    该模式要求图片图片位于显示区域的中心。这种模式下图片可能也无法填充 Image 的所有区域，会在侧边或者上下留下空白，由 Image 组件的底色填充。

alignItems水平布局
alignItems 决定你控件的位于屏幕的竖向 左右中 位置 flex-start(左或上) center flex-end(右或下) stretch
    flex: {
        flex: 1,
    },
    flexDirectionRow: {
        flexDirection: 'row',
        flex: 1,
    },
    flexDirectionColumn: {
        flexDirection: "column",//布局中子视图排放的方向
        flex: 1,
    },
    flexDirectionRowNotFlex: {
        flexDirection: 'row',
    },
    flexDirectionColumnNotFlex: {
        flexDirection: "column",
    },
    justifyCenter: {
        justifyContent: "center"//子元素沿着主轴的排列方式
    },
    centered: {
        justifyContent: "center",
        alignItems: "center"
    },
    centerV: {
        justifyContent: "center",
    },
    centerH: {
        alignItems: "center"
    },
    justifyBetween: {
        justifyContent: "space-between"
    },
    alignItemsEnd: {
        alignItems: "flex-end"
    },
    justifyEnd: {
        justifyContent: "flex-end"
    },














